# -*- coding: utf-8 -*-
"""Homework 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PnC3oTZE_kM4tCKzbJGY8rCPJjPyiBDR
"""

from pandas import read_csv
from scipy import stats

"""2.	Загрузите данные из файла pima-indians-diabetes.data.csv с помощью функции read_csv() из модуля pandas. Посмотрите на первые 10 наблюдений с помощью функции head()."""

filename='pima-indians-diabetes.data.csv'
names=['preg','plas','pres','skin','test','mass','pedi','age','class']
data=read_csv(filename,names=names)
data.head(10)

"""3. Посмотрите на размерность данных, обратившись к атрибуту shape
4.	Посмотрите на типы данных, обратившись к атрибуту dtypes
"""

data.shape

data.dtypes

"""5.	Выведите на экран общую информацию о наборе данных с помощью функции info(). Прокомментируйте результат."""

data.info()
#данные без пропусков

"""6.	Выявите распределение данных по классам, воспользовавшись функцией groupby() для группировки данных по классам и функцией size() для подсчета количества наблюдений в каждом классе. Сделайте вывод о равномерности распределения данных по классам."""

data.groupby('class').size()
#Неравномерное распределение, больше в классе 0

"""7. Установите точность вывода результатов до 3-х знаков после запятой с помощью функции set_option('precision', 3) из модуля pandas"""

from pandas import set_option

set_option('display.precision', 3)

"""8. Выведите на экран описательные статистики, воспользовавшись функцией describe(). Прокомментируйте результат."""

data.describe()
#есть нулевые значения в первых 4х переменных

"""9.	Рассчитайте показатель ассиметрии для всех признаков, воспользовавшись функцией skew(). Прокомментируйте результат"""

data.skew()
#распределение с положительной асимметрией, ниже можно увидеть, что среднее значение превышает моду и медианное значение

print(data.mode())

print(data.median())

print(data.mean())

"""10.	 Рассчитайте показатель эксцесса для всех признаков, воспользовавшись функцией kurtosis(). Прокомментируйте результат."""

data.kurtosis()
#ожидаемое значение = 3, большая высота пика - pres, test, pedi, получается, что нормального распределения нет ни у одного из представленных значений

"""11.  Рассчитайте коэффициент корреляции Пирсона для каждой пары признаков (показателей), воспользуйтесь функцией corr(method='pearson'). Назовите пары показателей с наиболее сильной линейной связью"""

data.corr(method='pearson')
#мы рассчитали коэффициент положительной асимметрии, высокая корреляция будет наблюдаться между переменными с коэф от 0,8, средняя - от 0,5. 
#по нашим значениям наибольшая корелляция между age и preg, plas и class, skin и mass

"""12.	 Постройте гистограмму для всех признаков, воспользовавшись функцией hist(figsize=(8,8)) и функцией show() из модуля matplotlib.pyplot. Прокомментируйте результат."""

import matplotlib.pyplot as plt

data.hist(figsize=(8,8)) 
plt.show()
#нет нормального распределения, у всех переменных есть выбросы, наиболее близки к нормального распределению pres и mass.

"""13.	 Постройте ядерную функцию плотности для всех признаков, воспользовавшись функцией plot(kind='kde', subplots=True, layout=(3,3), sharex=False, sharey=False, figsize=(8,8)) и функцией show() из модуля matplotlib.pyplot. Прокомментируйте результат."""

data.plot(kind='kde', subplots=True, layout=(3,3), sharex=False, sharey=False, figsize=(8,8))
plt.show()
#обобщаем гистограммы, приведенные выше

"""14. Постройте ящики с усами для всех признаков, воспользовавшись функцией plot(kind='box', subplots=True, layout=(3,3), sharex=False, sharey=False, figsize=(8,8)) и функцией show() из модуля matplotlib.pyplot. Прокомментируйте результат"""

data.plot(kind='box', subplots=True, layout=(3,3), sharex=False, sharey=False, figsize=(8,8)) 
plt.show()
#правосторонняя ассимметрия - test, pedi, age, class
#левосторонняя ассимметрия - skin, pres
#сильная вариация - plas, pres, слабая - preg, skin, test, predi, age

"""15.	 Постройте коррелограмму в виде тепловой карты, воспользовавшись функцией figure(figsize=(8,8)) из модуля matplotlib.pyplot, функцией heatmap(data.corr(), annot = True) из модуля seaborn и функцией show() из модуля matplotlib.pyplot. Прокомментируйте результат."""

import seaborn as sns

fig = plt.figure(figsize=(8,8)) 
sns.heatmap(data.corr(), annot = True)

"""16.	 Постройте диаграмму рассеяния, воспользовавшись функцией scatter_matrix(data, figsize=(8,8)) из модуля pandas.plotting и функцией show() из модуля matplotlib.pyplot. Прокомментируйте результат."""

import pandas as pd

pd.plotting.scatter_matrix(data, figsize=(8,8)) 
plt.show()
#построили диаграмму, отражающую значения двух переменных в виде точек на декартовой плоскости, она показывает наличие корреляции между переменными.
#в данном примере сильной корреляции не наблюдается, есть слабая корреляция между skin и mass, preg и age